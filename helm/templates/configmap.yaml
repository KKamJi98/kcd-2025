apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "kcd-2025-nginx.fullname" . }}-html
  labels:
    {{- include "kcd-2025-nginx.labels" . | nindent 4 }}
data:
  index.html.template: |
    <!doctype html>
    <html lang="ko">
      <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <title>KCD 2025 Demo</title>
        <style>
          :root{
            --bg:#070b1b; --bg-2:#0b1024; --txt:#e8ecff; --sub:#9aa4c7; --accent:#6aa1ff; --accent-2:#9b7bff;
            --card-bg: rgba(255,255,255,.035); --card-bd: rgba(255,255,255,.14);
            --radius: 18px; --shadow: 0 22px 60px rgba(0,0,0,.45);
            --h1: clamp(28px, 5.2vw, 46px); --h2: clamp(18px, 3.5vw, 28px); --kicker: 12px;
          }
          *{ box-sizing:border-box }
          html,body{ height:100% }
          body{
            margin:0; color:var(--txt);
            font:16px/1.65 system-ui,-apple-system,'Segoe UI',Roboto,'Noto Sans KR',Arial,sans-serif;
            background: radial-gradient(1200px 680px at 10% -10%, var(--bg-2), var(--bg));
            overflow-x:hidden;
            word-break: keep-all; hyphens: none;
          }

          .aurora{ position:fixed; inset:-20vh -20vw; filter: blur(30px) saturate(120%); pointer-events:none; }
          .aurora:before,.aurora:after{
            content:""; position:absolute; inset:0;
            background:
              radial-gradient(60% 90% at 20% 10%, rgba(120,150,255,.45), transparent 60%),
              radial-gradient(70% 50% at 80% 0%, rgba(155,123,255,.35), transparent 60%),
              radial-gradient(50% 60% at 50% 100%, rgba(90,255,220,.18), transparent 60%);
            mix-blend-mode: screen; animation: float 16s ease-in-out infinite;
          }
          .aurora:after{ transform:scale(1.2) rotate(8deg); animation-duration:22s; opacity:.8 }
          @keyframes float{ 0%,100%{ transform:translateY(0) } 50%{ transform:translateY(-2.5%) } }

          .grain{ position:fixed; inset:0; pointer-events:none; opacity:.08; background-image:url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="160" height="160" viewBox="0 0 160 160"><filter id="n"><feTurbulence type="fractalNoise" baseFrequency="0.8" numOctaves="2" stitchTiles="stitch"/></filter><rect width="100%" height="100%" filter="url(%23n)" opacity=".55"/></svg>'); mix-blend-mode:soft-light }

          .wrap{ min-height:100dvh; display:grid; place-items:center; padding:28px }
          .card{
            position:relative; width:min(900px, 92vw); background:var(--card-bg); border:1px solid var(--card-bd);
            border-radius:var(--radius); padding:36px 30px 60px; box-shadow:var(--shadow); backdrop-filter: blur(8px);
          }
          .card:before{ content:""; position:absolute; inset:0; border-radius:inherit; padding:1px;
            background: linear-gradient(120deg, rgba(255,255,255,.35), rgba(255,255,255,.08));
            -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
            -webkit-mask-composite: xor; mask-composite: exclude;
          }

          .kicker{ display:inline-flex; align-items:center; gap:8px; padding:5px 12px; border:1px solid var(--card-bd);
            border-radius:999px; color:var(--sub); font-size:var(--kicker); letter-spacing:.08em; text-transform:uppercase }
          .kicker .dot{ width:6px; height:6px; border-radius:50%; background:linear-gradient(135deg, var(--accent), var(--accent-2)); box-shadow:0 0 10px var(--accent) }

          h1{ margin:14px 0 10px; font-size:var(--h1); letter-spacing:.01em }
          .accent{ background: linear-gradient(120deg, var(--accent), var(--accent-2));
            -webkit-background-clip:text; background-clip:text; color:transparent; font-weight:800 }
          h2{ margin:6px 0 0; font-size:var(--h2); color:var(--sub); font-weight:600; word-break: keep-all; }

          .row{ display:flex; flex-wrap:wrap; align-items:center; gap:16px; margin-top:22px }
          .pill{ display:inline-flex; align-items:center; gap:10px; padding:10px 14px; border-radius:999px; border:1px solid var(--card-bd) }
          .icon{ width:18px; height:18px; display:inline-block; background:linear-gradient(120deg, var(--accent), var(--accent-2)); mask: var(--mask) center/contain no-repeat; -webkit-mask: var(--mask) center/contain no-repeat }
          .icon.calendar{ --mask: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23000"><path d="M7 2a1 1 0 0 1 1 1v1h8V3a1 1 0 1 1 2 0v1h1a3 3 0 0 1 3 3v11a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3h1V3a1 1 0 0 1 1-1Zm12 8H5v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-8Z"/></svg>') }
          .icon.pin{ --mask: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23000"><path d="M12 2a7 7 0 0 1 7 7c0 5.25-7 13-7 13S5 14.25 5 9a7 7 0 0 1 7-7Zm0 9.5A2.5 2.5 0 1 0 12 6a2.5 2.5 0 0 0 0 5.5Z"/></svg>') }

          .metaValue{ font-size:clamp(16px,2.6vw,20px); font-weight:800; letter-spacing:.01em }
          .mono{ font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, 'Liberation Mono', monospace }

          .clock {
            position: absolute; right: 16px; bottom: 16px;
            display: inline-flex; align-items: center; gap: 10px;
            padding: 10px 14px; border-radius: 999px;
            background: var(--card-bg); border: 1px solid var(--card-bd);
            box-shadow: var(--shadow); backdrop-filter: blur(8px);
            color: var(--txt); font-weight: 700; letter-spacing: .02em;
          }
          .clock .dot {
            width: 8px; height: 8px; border-radius: 50%;
            background: linear-gradient(120deg, var(--accent), var(--accent-2));
            box-shadow: 0 0 8px var(--accent);
          }
          .clock .time {
            font-size: clamp(16px, 2.6vw, 20px);
            font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, 'Liberation Mono', monospace;
          }
          @media (max-width: 480px) {
            .clock { right: 12px; bottom: 12px; padding: 8px 12px }
          }
        </style>
      </head>
      <body>
        <div class="aurora"></div>
        <div class="grain" aria-hidden="true"></div>
        <main class="wrap">
          <section class="card" aria-label="Event hero">
            <div class="kicker"><span class="dot"></span> Cloud Native Korea Community Day 2025</div>
            <h1><span class="accent">[<span class="mono" id="prefix">${PREFIX}</span>-<span class="mono" id="region">${REGION}</span>]</span></h1>
            <h2>Cloud Native Korea Community Day 2025<br />에 오신 것을 환영합니다!</h2>

            <div class="row" role="list">
              <div class="pill" role="listitem"><i class="icon calendar" aria-hidden="true"></i><span class="metaValue" id="event-date">2025-09-16</span></div>
              <div class="pill" role="listitem"><i class="icon pin" aria-hidden="true"></i><span class="metaValue" id="venue">Seoul</span></div>
            </div>

            <div class="clock" aria-live="polite">
              <span class="dot" aria-hidden="true"></span>
              <span class="time" id="clock-now">--:--:-- KST</span>
            </div>
          </section>
        </main>

        <script>
          (function () {
            const TZ = "Asia/Seoul";
            const el = document.getElementById("clock-now");

            function pad2(n){ return n.toString().padStart(2, "0"); }

            function tick() {
              const now = new Date();
              const fmt = new Intl.DateTimeFormat("ko-KR", {
                timeZone: TZ, hour12: false,
                hour: "2-digit", minute: "2-digit", second: "2-digit"
              }).formatToParts(now).reduce((acc,p)=>{ acc[p.type]=p.value; return acc; }, {});
              el.textContent = `${pad2(fmt.hour||now.getHours())}:${pad2(fmt.minute||now.getMinutes())}:${pad2(fmt.second||now.getSeconds())} KST`;
            }
            tick();
            setInterval(tick, 1000);
          })();
        </script>
      </body>
    </html>
